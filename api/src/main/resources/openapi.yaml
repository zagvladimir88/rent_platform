openapi: 3.0.1
info:
  version: 1.0.0
  title: "Rent-platfom API"

paths:
  /api/users/{id}:
    get:
      tags:
        - User
      summary: Gets user by ID
      operationId: findUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Found the user by id
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/User"
    put:
      tags:
        - User
      operationId: updateUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserUpdateRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
    delete:
      tags:
        - User
      operationId: deleteUsersById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  /api/locations/{id}:
    get:
      tags:
        - location-rest-controller
      summary: Gets location by ID
      operationId: findLocationById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Found the location by id
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Location"
    put:
      tags:
        - location-rest-controller
      operationId: updateUser_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LocationUpdateRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
    delete:
      tags:
        - location-rest-controller
      operationId: deleteLocationById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/countries/{id}":
    get:
      tags:
        - country-rest-controller
      operationId: findCountryById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
    put:
      tags:
        - country-rest-controller
      operationId: updateCountry
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CountryUpdateRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
    delete:
      tags:
        - country-rest-controller
      operationId: deleteCountryById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/auth":
    post:
      tags:
        - authentication-controller
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AuthRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/AuthResponse"
  "/api/users":
    get:
      tags:
        - User
      summary: Gets all users
      operationId: findAllUsers
      responses:
        '200':
          description: Found the users
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/User"
    post:
      tags:
        - User
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserCreateRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/sub-item-types":
    get:
      tags:
        - sub-item-type-rest-controller
      operationId: findAllISubItemTypes
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
    post:
      tags:
        - sub-item-type-rest-controller
      operationId: createSubItemType
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SubItemTypeCreateRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/roles":
    get:
      tags:
        - role-rest-controller
      operationId: findAllRoles
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
    post:
      tags:
        - role-rest-controller
      operationId: createRole
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RoleCreateRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/locations":
    get:
      tags:
        - location-rest-controller
      operationId: findAllLocations
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
    post:
      tags:
        - location-rest-controller
      operationId: createLocation
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LocationCreateRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/items":
    get:
      tags:
        - item-rest-controller
      operationId: findAllItems
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
    post:
      tags:
        - item-rest-controller
      operationId: createItem
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ItemCreateRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/items-leased":
    get:
      tags:
        - item-leased-rest-controller
      operationId: findAllItems_1
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
    post:
      tags:
        - item-leased-rest-controller
      operationId: createItem_1
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ItemLeasedCreateRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/item-categories":
    get:
      tags:
        - item-category-rest-controller
      operationId: findAllItemCategories
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
    post:
      tags:
        - item-category-rest-controller
      operationId: createItemCategory
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ItemCategoryCreateRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/grades":
    get:
      tags:
        - grade-rest-controller
      operationId: findAllGrades
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
    post:
      tags:
        - grade-rest-controller
      operationId: createGrade
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GradeCreateRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/countries":
    get:
      tags:
        - country-rest-controller
      operationId: findAllCountries
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
    post:
      tags:
        - country-rest-controller
      operationId: createCountry
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CountryCreateRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/users/search":
    get:
      tags:
        - User
      operationId: findAllUsersWithParams
      parameters:
        - name: searchRequest
          in: query
          required: true
          schema:
            "$ref": "#/components/schemas/SearchRequest"
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/users/login/{login}":
    get:
      tags:
        - User
      operationId: findByLogin
      parameters:
        - name: login
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
  "/api/sub-item-types/{id}":
    get:
      tags:
        - sub-item-type-rest-controller
      operationId: findSubItemTypeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
    delete:
      tags:
        - sub-item-type-rest-controller
      operationId: deleteSubItemTypeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/roles/{id}":
    get:
      tags:
        - role-rest-controller
      operationId: findRoleById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
    delete:
      tags:
        - role-rest-controller
      operationId: deleteRoleById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/roles/users/{id}":
    get:
      tags:
        - role-rest-controller
      operationId: findRolesByUserId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/locations/search":
    get:
      tags:
        - location-rest-controller
      operationId: findAllLocationsWithParams
      parameters:
        - name: searchRequest
          in: query
          required: true
          schema:
            "$ref": "#/components/schemas/SearchRequest"
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/items/{id}":
    get:
      tags:
        - item-rest-controller
      operationId: findByItemId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
    delete:
      tags:
        - item-rest-controller
      operationId: deleteItemsById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/items/search":
    get:
      tags:
        - item-rest-controller
      operationId: findAllItemsWithParams
      parameters:
        - name: searchRequest
          in: query
          required: true
          schema:
            "$ref": "#/components/schemas/SearchRequest"
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/items-leased/{id}":
    get:
      tags:
        - item-leased-rest-controller
      operationId: findItemLeasedById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
    delete:
      tags:
        - item-leased-rest-controller
      operationId: deleteItemLeasedById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/item-categories/{id}":
    get:
      tags:
        - item-category-rest-controller
      operationId: findItemCategoryById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
    delete:
      tags:
        - item-category-rest-controller
      operationId: deleteItemCategoryById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/grades/{id}":
    get:
      tags:
        - grade-rest-controller
      operationId: findlGradeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
    delete:
      tags:
        - grade-rest-controller
      operationId: deleteGradeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/countries/search":
    get:
      tags:
        - country-rest-controller
      operationId: findAllCountriesWithParams
      parameters:
        - name: searchRequest
          in: query
          required: true
          schema:
            "$ref": "#/components/schemas/SearchRequest"
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/countries/login/{name}":
    get:
      tags:
        - country-rest-controller
      operationId: findByCountryName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
components:
  schemas:
    UserUpdateRequest:
      type: object
      properties:
        username:
          type: string
        userLogin:
          type: string
        userPassword:
          type: string
        locationId:
          type: integer
          format: int64
        locationDetails:
          type: string
        phoneNumber:
          type: string
        mobileNumber:
          type: string
        email:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - NOT_ACTIVE
            - DELETED
    Country:
      type: object
      properties:
        id:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - ACTIVE
            - NOT_ACTIVE
            - DELETED
        countryName:
          type: string
        locationSet:
          uniqueItems: true
          type: array
          items:
            "$ref": "#/components/schemas/Location"
    Grade:
      type: object
      properties:
        id:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - ACTIVE
            - NOT_ACTIVE
            - DELETED
        itemLeased:
          "$ref": "#/components/schemas/ItemLeased"
        userFrom:
          "$ref": "#/components/schemas/User"
        userTo:
          "$ref": "#/components/schemas/User"
        grade:
          type: number
          format: double
        description:
          type: string
    Item:
      type: object
      properties:
        id:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - ACTIVE
            - NOT_ACTIVE
            - DELETED
        itemName:
          type: string
        subItemType:
          "$ref": "#/components/schemas/SubItemType"
        location:
          "$ref": "#/components/schemas/Location"
        itemLocation:
          type: string
        description:
          type: string
        owner:
          "$ref": "#/components/schemas/User"
        pricePerHour:
          type: number
          format: double
        available:
          type: boolean
    ItemCategory:
      type: object
      properties:
        id:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - ACTIVE
            - NOT_ACTIVE
            - DELETED
        categoryName:
          type: string
    ItemLeased:
      type: object
      properties:
        id:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - ACTIVE
            - NOT_ACTIVE
            - DELETED
        itemId:
          type: integer
          format: int64
        renter:
          "$ref": "#/components/schemas/User"
        timeFrom:
          type: string
          format: date-time
        timeTo:
          type: string
          format: date-time
        pricePerHour:
          type: number
          format: double
        discount:
          type: number
          format: double
        fee:
          type: number
          format: double
        priceTotal:
          type: number
          format: double
        rentierGradeDescription:
          type: string
        renterGradeDescription:
          type: string
    Location:
      type: object
      properties:
        id:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - ACTIVE
            - NOT_ACTIVE
            - DELETED
        postalCode:
          type: string
        name:
          type: string
        description:
          type: string
        country:
          "$ref": "#/components/schemas/Country"
        items:
          uniqueItems: true
          type: array
          items:
            "$ref": "#/components/schemas/Item"
        users:
          uniqueItems: true
          type: array
          items:
            "$ref": "#/components/schemas/User"
    LocationUpdateRequest:
      type: object
      properties:
        postalCode:
          type: string
        name:
          type: string
        description:
          type: string
        country:
          "$ref": "#/components/schemas/Country"
        status:
          type: string
          enum:
            - ACTIVE
            - NOT_ACTIVE
            - DELETED
    Role:
      type: object
      properties:
        id:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - ACTIVE
            - NOT_ACTIVE
            - DELETED
        name:
          type: string
    SubItemType:
      type: object
      properties:
        id:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - ACTIVE
            - NOT_ACTIVE
            - DELETED
        subCategoryName:
          type: string
        itemCategory:
          "$ref": "#/components/schemas/ItemCategory"
        items:
          uniqueItems: true
          type: array
          items:
            "$ref": "#/components/schemas/Item"
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - ACTIVE
            - NOT_ACTIVE
            - DELETED
        username:
          type: string
        userLogin:
          type: string
        userPassword:
          type: string
        location:
          "$ref": "#/components/schemas/Location"
        locationDetails:
          type: string
        phoneNumber:
          type: string
        mobileNumber:
          type: string
        email:
          type: string
        registrationDate:
          type: string
          format: date-time
        roles:
          uniqueItems: true
          type: array
          items:
            "$ref": "#/components/schemas/Role"
        items:
          uniqueItems: true
          type: array
          items:
            "$ref": "#/components/schemas/Item"
        itemsleased:
          uniqueItems: true
          type: array
          items:
            "$ref": "#/components/schemas/ItemLeased"
        gradesToSet:
          uniqueItems: true
          type: array
          items:
            "$ref": "#/components/schemas/Grade"
        gradesFromSet:
          uniqueItems: true
          type: array
          items:
            "$ref": "#/components/schemas/Grade"
    CountryUpdateRequest:
      type: object
      properties:
        countryName:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - NOT_ACTIVE
            - DELETED
    AuthRequest:
      type: object
      properties:
        user_login:
          type: string
        user_password:
          type: string
    AuthResponse:
      type: object
      properties:
        token:
          type: string
        username:
          type: string
    UserCreateRequest:
      type: object
      properties:
        username:
          type: string
        userLogin:
          type: string
        userPassword:
          type: string
        locationId:
          type: integer
          format: int64
        locationDetails:
          type: string
        phoneNumber:
          type: string
        mobileNumber:
          type: string
        email:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - NOT_ACTIVE
            - DELETED
    SubItemTypeCreateRequest:
      type: object
      properties:
        subCategoryName:
          type: string
        categoryId:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - ACTIVE
            - NOT_ACTIVE
            - DELETED
    RoleCreateRequest:
      type: object
      properties:
        name:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - NOT_ACTIVE
            - DELETED
    LocationCreateRequest:
      type: object
      properties:
        postalCode:
          type: string
        name:
          type: string
        description:
          type: string
        countryId:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - ACTIVE
            - NOT_ACTIVE
            - DELETED
    ItemCreateRequest:
      type: object
      properties:
        itemName:
          type: string
        itemTypeId:
          type: integer
          format: int64
        locationId:
          type: integer
          format: int64
        itemLocation:
          type: string
        description:
          type: string
        ownerId:
          type: integer
          format: int64
        pricePerHour:
          type: integer
          format: int32
        available:
          type: boolean
        status:
          type: string
          enum:
            - ACTIVE
            - NOT_ACTIVE
            - DELETED
    ItemLeasedCreateRequest:
      type: object
      properties:
        itemId:
          type: integer
          format: int64
        renterId:
          type: integer
          format: int64
        timeFrom:
          type: string
          format: date-time
        timeTo:
          type: string
          format: date-time
        pricePerHour:
          type: number
          format: double
        discount:
          type: number
          format: double
        fee:
          type: number
          format: double
        priceTotal:
          type: number
          format: double
        rentierGradeDescription:
          type: string
        renterGradeDescription:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - NOT_ACTIVE
            - DELETED
    ItemCategoryCreateRequest:
      type: object
      properties:
        categoryName:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - NOT_ACTIVE
            - DELETED
    GradeCreateRequest:
      type: object
      properties:
        itemLeasedId:
          type: integer
          format: int64
        userFromId:
          type: integer
          format: int64
        userToId:
          type: integer
          format: int64
        description:
          type: string
        grade:
          type: number
          format: double
        status:
          type: string
          enum:
            - ACTIVE
            - NOT_ACTIVE
            - DELETED
    CountryCreateRequest:
      type: object
      properties:
        countryName:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - NOT_ACTIVE
            - DELETED
    SearchRequest:
      type: object
      properties:
        page:
          type: string
        size:
          type: string
        searchQuery:
          type: string
